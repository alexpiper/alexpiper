[{"authors":["admin"],"categories":null,"content":"Alexander Piper is a research scientist with Agriculture Victoria Research and currently completing his PhD with La Trobe University. His research uses high-throughput sequencing and computational biology to improve detection and control of insect pests.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Alexander Piper is a research scientist with Agriculture Victoria Research and currently completing his PhD with La Trobe University. His research uses high-throughput sequencing and computational biology to improve detection and control of insect pests.","tags":null,"title":"Alexander M Piper","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["R"],"content":"  Geographic Visualisation of Ecological Data in R      code{white-space: pre;} pre:not([class]) { background-color: white; }  if (window.hljs) { hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); if (document.readyState \u0026\u0026 document.readyState === \"complete\") { window.setTimeout(function() { hljs.initHighlighting(); }, 0); } }  h1 { font-size: 34px; } h1.title { font-size: 38px; } h2 { font-size: 30px; } h3 { font-size: 24px; } h4 { font-size: 18px; } h5 { font-size: 16px; } h6 { font-size: 12px; } .table th:not([align]) { text-align: left; }  .main-container { max-width: 940px; margin-left: auto; margin-right: auto; } code { color: inherit; background-color: rgba(0, 0, 0, 0.04); } img { max-width:100%; } .tabbed-pane { padding-top: 12px; } .html-widget { margin-bottom: 20px; } button.code-folding-btn:focus { outline: none; } summary { display: list-item; }  .tabset-dropdown  .nav-tabs { display: inline-table; max-height: 500px; min-height: 44px; overflow-y: auto; background: white; border: 1px solid #ddd; border-radius: 4px; } .tabset-dropdown  .nav-tabs  li.active:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown  .nav-tabs.nav-tabs-open  li.active:before { content: \"\"; border: none; } .tabset-dropdown  .nav-tabs.nav-tabs-open:before { content: \"\"; font-family: 'Glyphicons Halflings'; display: inline-block; padding: 10px; border-right: 1px solid #ddd; } .tabset-dropdown  .nav-tabs  li.active { display: block; } .tabset-dropdown  .nav-tabs  li  a, .tabset-dropdown  .nav-tabs  li  a:focus, .tabset-dropdown  .nav-tabs  li  a:hover { border: none; display: inline-block; border-radius: 4px; } .tabset-dropdown  .nav-tabs.nav-tabs-open  li { display: block; float: none; } .tabset-dropdown  .nav-tabs  li { display: none; }    Geographic Visualisation of Ecological Data in R Alexander Piper 2019-10-13  This short tutorial explains basic geographic data visualisation for ecologists. I assume a basic knowledge of R, however if you have never used R before you should be able to follow along and copy the below scripts.\nIf you do not currently have R installed you can download it here. I would also highly recommend downloading the free RStudio editor.\nFor an introduction to R, i suggest the excelent and free R for data science ebook by Hadley Wickham \u0026amp; Garrett Grolemund, as well as the interactive datacamp course free introduction to R\nPlotting basic maps Set up for analysis The first step for our analysis to set our working directory, and install the required R packages to run the analysis\nThe packages we will install are:\n tidyverse - This is a collection of handy packages for data manipulation, exploration and visualization maptools - This package contains the base world map data we will use devtools - This package will allow installation of packages that have not yet been released on CRAN, such as the below patchwork package, directly from github patchwork - This package allows easily composition of multiplots  setwd(\u0026quot;/Users/alexanderpiper/Dropbox/R/Geographic\u0026quot;) ##Change this to the directory you wish to work in #install packages from CRAN install.packages(c(\u0026quot;tidyverse\u0026quot;,\u0026quot;maptools\u0026quot;,\u0026quot;devtools\u0026quot;, \u0026quot;gpclib\u0026quot;)) # install packages from github devtools::install_github(\u0026quot;thomasp85/patchwork\u0026quot;) After packages are downloaded and installed, we then load them into our workspace\nlibrary(\u0026quot;tidyverse\u0026quot;) library(\u0026quot;maptools\u0026quot;) library(\u0026quot;devtools\u0026quot;) library(\u0026quot;patchwork\u0026quot;)  Plotting a basic world map First step is to plot a basic world map. For this we will use the simple world map dataset contained within the maptools package\n#Get the simple world map data data(wrld_simpl) wrld_simpl@data$id \u0026lt;- wrld_simpl@data$NAME gpclibPermit() # Give permissions to maptools to use gpclib ## [1] TRUE wrld \u0026lt;- fortify(wrld_simpl, region=\u0026quot;id\u0026quot;) # Plot simple worldmap with ggplot wrld_plot \u0026lt;- ggplot() + geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat)) + coord_equal() #plot the map plot(wrld_plot)  Changing the base map colours Now we make some small changes to the base map colours and background to make it more visible\nwrld_plot \u0026lt;- ggplot() + geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill=\u0026quot;lightgrey\u0026quot;, color=\u0026quot;#7f7f7f\u0026quot;, size=0.25) + coord_equal() + theme_bw() #changes the theme to basic black and white #plot the map plot(wrld_plot) Thats looking much better, but what if we only have a dataset within australia? We can subsert the map using geographic coordinates.\naus_plot \u0026lt;- wrld_plot + coord_fixed(ylim = c(-50,0), xlim=c(110,180)) #change these for desired region #plot the map of australia only plot(aus_plot)   Part one: Specimen collection locations Now we want to plot some data on our map, for this we are plotting the collection locations of some tephritid fruit fly specimens from the Victorian Agricultural Insect Collection that i am using during my PhD\n#Read in our datafile obs.data \u0026lt;- read_csv(\u0026quot;sampleloc.csv\u0026quot;) head(obs.data) # display the top of the file ## # A tibble: 6 x 3 ## Sample location Species ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 7186a Kalumburu Western Australia B. tryoni ## 2 7186b Kalumburu Western Australia B. tryoni ## 3 7186c Kalumburu Western Australia B. tryoni ## 4 7186d Kalumburu Western Australia B. tryoni ## 5 7186e Kalumburu Western Australia B. tryoni ## 6 7187a Cobourg Peninsula Northern Territory B. tryoni This data file contains 3 columns (or variables) and 259 entries. Many functions in R expect data to be in a long format rather than a wide format, ie: each column is a variable and each row is an entry. The variables in this dataset are: Sample ID, Collection location and Species. Your specific data file could have more or less columns depending on how many variables were recorded for your specimens and this is fine. If we look at this we can notice a problem. The collection data i have been supplied alongside these specimens contains only the location name, rather than geographic coordinates, oops!\nUnfortunately R is not an encyclopedia, and will not know where to put these locations unless we can provide lattitude and longitude coordinates to match with those in our base map. For this dataset, i could manually correct this, by contacting the original specimen collectors, or doing a google maps search. However this could be very time consuming repetitive task for larger datasets.\nIf you already have the lattitude and longitude info for your samples already, thank whoever collected your specimens for using their gps and skip this section, otherwise to solve this issue, we are going to get the computer to do the grunt work of geocoding for us.\nGeocoding Geocoding is the process of converting locationes (i.e. “1 Ocean Avenue, Surfers Paradise QLD”) into geographic coordinates (i.e. latitude -27.993412, and longitude 153.429921), which you can then use to place markers on a map.\nOnline maps packages such as google maps and openstreetmaps allow you to query their API using HTML and geocode data. The package ggmaps contains a function to interface with the google maps api, however google now requires you to register and fill in credit card details to access this API\nInstead, we will create a function to geocode our data using the openstreetmap api. You do not need to know the specifics of this code, but the basic idea is it searches a character string “location”, and downloads the JSON formatted data from openstreetmap, then returns a data frame that contains the query adress, the longitude and lattitude.\nget_geocode \u0026lt;- function(location = NULL) { if(suppressWarnings(is.null(location))) return(data.frame()) tryCatch( d \u0026lt;- jsonlite::fromJSON( gsub('\\\\@addr\\\\@', gsub('\\\\s+', '\\\\%20', location), 'http://nominatim.openstreetmap.org/search/@addr@?format=json\u0026amp;locationdetails=0\u0026amp;limit=1') ), error = function(c) return(data.frame()) ) if(length(d) == 0) return(data.frame()) return(data.frame(location,lon = as.numeric(d$lon), lat = as.numeric(d$lat))) } Now that we have defined the get_geocode function in R, we can then apply it to every sample in in our dataset in order to retrieve the lattitude and longitude. As the input for the function is a character vector of locations, we will need to grab the location column from our dataset and put it in a new variable. To save time querying the openstreetmaps server, we will only get the unique location names from our dataset.\n#Get unique locations location \u0026lt;- unique(obs.data$location) #What does this look like? head(location) ## [1] \u0026quot;Kalumburu Western Australia\u0026quot; ## [2] \u0026quot;Cobourg Peninsula Northern Territory\u0026quot; ## [3] \u0026quot;Coen Queensland\u0026quot; ## [4] \u0026quot;Mackay Queensland\u0026quot; ## [5] \u0026quot;Brisbane Queensland\u0026quot; ## [6] \u0026quot;Sydney New South Wales\u0026quot; You can see that instead of a dataframe, we now have a character vector\nWe will then use lapply to apply our get_geocode function we to each of the elements in our character vector. This may take a few minutes depending on how many searches you are conducting and the speed of your internet connection.\nAs using the get_geocode function will return a list of dataframes (one for each location in the vector), we will collapse this list into one big dataframe using the bind_rows functionality of the dplyr package (part of the tidyverse library we loaded earlier)\n#lapply the function to all elements in the location vector coords \u0026lt;- lapply(location,get_geocode) #Collapse list of dataframes into one coords \u0026lt;- bind_rows(coords) #what does this look like? head(coords) ## location lon lat ## 1 Kalumburu Western Australia 126.6426 -14.29503 ## 2 Coen Queensland 143.1997 -13.94464 ## 3 Mackay Queensland 149.1865 -21.14196 ## 4 Brisbane Queensland 153.0235 -27.46897 ## 5 Sydney New South Wales 151.2165 -33.85482 ## 6 Ellerslie Victoria 142.6832 -38.15133 You can see we now have geographic coordinates for our collection locations, however they are in a seperate data frame to our original data frame that contains other info about the samples (ie: Species name)\nTherefore we will use the inner_join function of the dplyr package to join the 2 data frames together. As this relies on using a matching column between the two dataframes as a key, we need to make sure the key column is called the same thing. If it isnt, you can rename the columns in one of the data frames using the colnames() function\n#join tables together samples_latlon \u0026lt;- inner_join(obs.data,coords,by=\u0026quot;location\u0026quot;) head(samples_latlon) ## # A tibble: 6 x 5 ## Sample location Species lon lat ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 7186a Kalumburu Western Australia B. tryoni 127. -14.3 ## 2 7186b Kalumburu Western Australia B. tryoni 127. -14.3 ## 3 7186c Kalumburu Western Australia B. tryoni 127. -14.3 ## 4 7186d Kalumburu Western Australia B. tryoni 127. -14.3 ## 5 7186e Kalumburu Western Australia B. tryoni 127. -14.3 ## 6 3012e Coen Queensland B. tryoni 143. -13.9 We now have all the original data, as well as the lattitude and longitude information in one data frame and can go back to plotting. First we will plot on a world map to see how our function did. If there are dots in locations you didnt expect, it will probably be a result of insuficient adress information to uniquely place a location it in the world. If this is so, we can write out the data frame into a csv that can be manually curated in Excel or other programs.\n# Plot simple worldmap with ggplot gg.geocoded \u0026lt;- ggplot(samples_latlon) + geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill=\u0026quot;lightgrey\u0026quot;, color=\u0026quot;#7f7f7f\u0026quot;, size=0.25) #Add data points gg.geocoded \u0026lt;- gg.geocoded + geom_point(aes(x=lon, y=lat, color=Species), alpha=.5) + theme(legend.position = \u0026quot;none\u0026quot;) + coord_equal() plot(gg.geocoded) #we can see some errors, this is because there was not enough unique information recorded for an automated search, therefore manual curation will be required write.csv(samples_latlon, file=\u0026quot;samples_latlon.csv\u0026quot;)   Plotting point data After some manual curation,we can read bck in the data and see how it looks\n#Read in our data cleaned.data \u0026lt;- read_csv(\u0026quot;samples_latlon_curated.csv\u0026quot;) # Plot simple worldmap with ggplot gg.curated \u0026lt;- ggplot(cleaned.data) + geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill=\u0026quot;lightgrey\u0026quot;, color=\u0026quot;#7f7f7f\u0026quot;, size=0.25) + geom_count(aes(x=Long, y=Lat, color=Species), alpha=.5) + theme_bw() + coord_fixed(ylim = c(-90,90), xlim=c(-180,180)) plot(gg.curated) #Subset to australia using geographic coordinates gg.curated \u0026lt;- gg.curated + coord_fixed(ylim = c(-50,0), xlim=c(110,180)) #Add data points, colouring by species gg.species \u0026lt;- gg.curated + geom_point(aes(x=Long, y=Lat, color=Species), alpha=.5) + theme_bw() plot(gg.species) We can also adjust the point size to change with the number of entries with the same geographic coordinates by changing geom_point to geom_count\n#Add data points, colouring by species gg.species \u0026lt;- gg.curated + geom_count(aes(x=Long, y=Lat, color=Species), alpha=.5) + theme_bw() plot(gg.species) Customising colours Finally, we can play with the colours and aesthetics of our map. I am applying the ‘Spectral’ pallette from the colourbrewer package in R. You can see more colour brewer palettes here\n#Change colours of data points gg.col1 \u0026lt;- gg.species + scale_color_brewer(palette= \u0026quot;Spectral\u0026quot;) gg.col2 \u0026lt;- gg.species + scale_color_brewer(palette= \u0026quot;PrGn\u0026quot;) gg.col3 \u0026lt;- gg.species + scale_color_brewer(palette= \u0026quot;RdYlBu\u0026quot;) #Change colours manually custom.palette \u0026lt;- c(\u0026quot;#d73027\u0026quot;,\u0026quot;#f46d43\u0026quot;,\u0026quot;#fdae61\u0026quot;,\u0026quot;#fee08b\u0026quot;,\u0026quot;#ffffbf\u0026quot;,\u0026quot;#d9ef8b\u0026quot;,\u0026quot;#a6d96a\u0026quot;,\u0026quot;#66bd63\u0026quot;,\u0026quot;#1a9850\u0026quot;) gg.col4 \u0026lt;- gg.species + scale_color_manual(values=custom.palette,aesthetics=\u0026quot;colour\u0026quot;) #Plot multiplot using patchwork, removing the legend from all plots for easier viewing gg.col1 + gg.col2 + gg.col3 + gg.col4 \u0026amp; theme(legend.position = \u0026quot;none\u0026quot;) #alternatively, we can colour by location gg.location \u0026lt;- gg.curated + geom_count(aes(x=Long, y=Lat, color=Locality), alpha=.5) + theme_bw() plot(gg.location)   Adding labels Ive decide that for this dataset it is best to colour by species, using the Spectral palette from colour brewer. So to finish up i will go ahead with that and add appropriate labels and titles to the plot\n#Using spectral palette gg.species \u0026lt;- gg.species + scale_color_brewer(palette= \u0026quot;Spectral\u0026quot;) #Change legend titles gg.species \u0026lt;- gg.species + labs(size=\u0026quot;No. Specimens\u0026quot;) #Change x and y axis titles gg.species \u0026lt;- gg.species + xlab(\u0026quot;Longitude\u0026quot;) + ylab(\u0026quot;Lattitude\u0026quot;) #give the plot a title gg.species \u0026lt;- gg.species + labs(title=\u0026quot;Collection locations of Tephritidae specimens\u0026quot;)  Conclusion I hope this tutorarial can help with your research. For simple code to create the entire map without tutorial comments interspaced, see below:\n#Get the simple world map data data(wrld_simpl) wrld_simpl@data$id \u0026lt;- wrld_simpl@data$NAME wrld \u0026lt;- fortify(wrld_simpl, region=\u0026quot;id\u0026quot;) #Read in our data cleaned.data \u0026lt;- read_csv(\u0026quot;samples_latlon_curated.csv\u0026quot;) # Plot map of australia with ggplot gg.finalmap \u0026lt;- ggplot(cleaned.data) + geom_map(data=wrld, map=wrld, aes(map_id=id, x=long, y=lat), fill=\u0026quot;lightgrey\u0026quot;, color=\u0026quot;#7f7f7f\u0026quot;, size=0.25) + coord_fixed(ylim = c(-50,0), xlim=c(110,180)) #Add data points gg.finalmap \u0026lt;- gg.finalmap + geom_count(aes(x=Long, y=Lat, color=Species), alpha=.5) + theme_bw() + scale_color_brewer(palette= \u0026quot;Spectral\u0026quot;) + labs(size=\u0026quot;No. Specimens\u0026quot;) + xlab(\u0026quot;Longitude\u0026quot;) + ylab(\u0026quot;Lattitude\u0026quot;) + labs(title=\u0026quot;Collection locations of Tephritidae specimens\u0026quot;) plot(gg.finalmap) The versions of the packages used in creating this document can be found below. To view the original rmarkdown code, use the button in the top left corner.\nsession info sessionInfo() ## R version 3.6.0 (2019-04-26) ## Platform: x86_64-apple-darwin15.6.0 (64-bit) ## Running under: macOS Mojave 10.14.5 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_AU.UTF-8/en_AU.UTF-8/en_AU.UTF-8/C/en_AU.UTF-8/en_AU.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] patchwork_0.0.1 devtools_2.2.1 usethis_1.5.0 maptools_0.9-8 ## [5] sp_1.3-1 forcats_0.4.0 stringr_1.4.0 dplyr_0.8.3 ## [9] purrr_0.3.2 readr_1.3.1 tidyr_0.8.3 tibble_2.1.3 ## [13] ggplot2_3.1.1 tidyverse_1.2.1 ## ## loaded via a namespace (and not attached): ## [1] httr_1.4.1 pkgload_1.0.2 jsonlite_1.6 ## [4] modelr_0.1.4 assertthat_0.2.1 cellranger_1.1.0 ## [7] yaml_2.2.0 remotes_2.1.0 sessioninfo_1.1.1 ## [10] pillar_1.4.2 backports_1.1.5 lattice_0.20-38 ## [13] glue_1.3.1 digest_0.6.21 RColorBrewer_1.1-2 ## [16] rvest_0.3.4 colorspace_1.4-1 htmltools_0.4.0 ## [19] plyr_1.8.4 pkgconfig_2.0.3 broom_0.5.2 ## [22] haven_2.1.0 scales_1.0.0 processx_3.3.1 ## [25] generics_0.0.2 ellipsis_0.3.0 withr_2.1.2 ## [28] lazyeval_0.2.2 cli_1.1.0 magrittr_1.5 ## [31] crayon_1.3.4 readxl_1.3.1 memoise_1.1.0 ## [34] evaluate_0.14 ps_1.3.0 fs_1.3.1 ## [37] fansi_0.4.0 nlme_3.1-140 xml2_1.2.2 ## [40] foreign_0.8-71 gpclib_1.5-5 pkgbuild_1.0.3 ## [43] tools_3.6.0 prettyunits_1.0.2 hms_0.4.2 ## [46] munsell_0.5.0 callr_3.2.0 compiler_3.6.0 ## [49] rlang_0.4.0 grid_3.6.0 rstudioapi_0.10 ## [52] labeling_0.3 rmarkdown_1.16 testthat_2.1.1 ## [55] gtable_0.3.0 R6_2.4.0 lubridate_1.7.4 ## [58] knitr_1.25 utf8_1.1.4 zeallot_0.1.0 ## [61] rprojroot_1.3-2 desc_1.2.0 stringi_1.4.3 ## [64] Rcpp_1.0.2 vctrs_0.2.0 tidyselect_0.2.5 ## [67] xfun_0.10     // add bootstrap table styles to pandoc tables function bootstrapStylePandocTables() { $('tr.header').parent('thead').parent('table').addClass('table table-condensed'); } $(document).ready(function () { bootstrapStylePandocTables(); });   $(document).ready(function () { window.buildTabsets(\"TOC\"); }); $(document).ready(function () { $('.tabset-dropdown  .nav-tabs  li').click(function () { $(this).parent().toggleClass('nav-tabs-open') }); });   (function () { var script = document.createElement(\"script\"); script.type = \"text/javascript\"; script.src = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"; document.getElementsByTagName(\"head\")[0].appendChild(script); })();    ","date":1570924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570924800,"objectID":"69b00cbae9530c2912892f4ccd3012b5","permalink":"/post/geo_plot_1/geo_plot_1/","publishdate":"2019-10-13T00:00:00Z","relpermalink":"/post/geo_plot_1/geo_plot_1/","section":"post","summary":"Geographic Visualisation of Ecological Data in R      code{white-space: pre;} pre:not([class]) { background-color: white; }  if (window.hljs) { hljs.configure({languages: []}); hljs.initHighlightingOnLoad(); if (document.readyState \u0026\u0026 document.readyState === \"complete\") { window.setTimeout(function() { hljs.initHighlighting(); }, 0); } }  h1 { font-size: 34px; } h1.title { font-size: 38px; } h2 { font-size: 30px; } h3 { font-size: 24px; } h4 { font-size: 18px; } h5 { font-size: 16px; } h6 { font-size: 12px; } .","tags":["R","geography","visualisation"],"title":"Geographic Visualisation of Ecological Data in R","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["AM Piper","J Batovska","NOI Cogan","J Weiss","JP Cunningham","BC Rodoni","{...}"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"faeb6f57bb20987b03a60ebe0c7d0d46","permalink":"/publication/2019-01-01_2/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/publication/2019-01-01_2/","section":"publication","summary":"Trap-based surveillance strategies are widely used for monitoring of invasive insect species, aiming to detect newly arrived exotic taxa as well as track the population levels of established or endemic pests. Where these surveillance traps have low specificity and capture non-target endemic species in excess of the target pests, the need for extensive specimen sorting and identification creates a major diagnostic bottleneck. While the recent development of standardized molecular diagnostics has partly alleviated this requirement, the single specimen per reaction nature of these methods does not readily scale to the sheer number of insects trapped in surveillance programmes. Consequently, target lists are often restricted to a few high-priority pests, allowing unanticipated species to avoid detection and potentially establish populations. \n \n DNA metabarcoding has recently emerged as a method for conducting simultaneous, multi-species identification of complex mixed communities and may lend itself ideally to rapid diagnostics of bulk insect trap samples. Moreover, the high-throughput nature of recent sequencing platforms could enable the multiplexing of hundreds of diverse trap samples on a single flow cell, thereby providing the means to dramatically scale up insect surveillance in terms of both the quantity of traps that can be processed concurrently and number of pest species that can be targeted. In this review of the metabarcoding literature, we explore how DNA metabarcoding could be tailored to the detection of invasive insects in a surveillance context and highlight the unique technical and regulatory challenges that must be considered when implementing high-throughput sequencing technologies into sensitive diagnostic applications.","tags":[],"title":"Prospects and challenges of implementing DNA metabarcoding for high-throughput insect surveillance","type":"publication"},{"authors":["AM Piper","K Farnier","T Linder","R Speight","JP Cunningham"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"5f4a3f819b22ea603b71df2536945b45","permalink":"/publication/2017-01-01_1/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2017-01-01_1/","section":"publication","summary":"Yeast-insect interactions have been well characterized in drosophilid flies, but not in tephritid fruit flies, which include many highly polyphagous pest species that attack ripening fruits. Using the Queensland fruit fly (Bactrocera tryoni) as our model tephritid species, we identified yeast species present in the gut of wild-collected larvae and found two genera, Hanseniaspora and Pichia, were the dominant isolates. In behavioural trials using adult female B. tryoni, a fruit-agar substrate inoculated with Pichia kluyveri resulted in odour emissions that increased the attraction of flies, whereas inoculation with Hanseniaspora uvarum, produced odours that strongly deterred flies, and both yeasts led to decreased oviposition. Larval development trials showed that the fruit-agar substrate inoculated with the 'deterrent odour' yeast species, H. uvarum, resulted in significantly faster larval development and a greater number of adult flies, compared to a substrate inoculated with the 'attractive odour' yeast species, P. kluyveri, and a yeast free control substrate. GC-MS analysis of volatiles emitted by H. uvarum and P. kluyveri inoculated substrates revealed significant quantitative differences in ethyl-, isoamyl-, isobutyl-, and phenethyl- acetates, which may be responsible for the yeast-specific olfactory responses of adult flies. We discuss how our seemingly counterintuitive finding that female B. tryoni flies avoid a beneficial yeast fits well with our understanding of female choice of oviposition sites, and how the contrasting behavioural effects of H. uvarum and P. kluyveri raises interesting questions regarding the role of yeast-specific volatiles as cues to insect vectors. A better understanding of yeast-tephritid interactions could assist in the future management of tephritid fruit fly pests through the formulation of new 'attract and kill' lures, and the development of probiotics for mass rearing of insects in sterile insect control programs.","tags":[],"title":"Two gut-associated yeasts in a Tephritid fruit fly have contrasting effects on adult attraction and larval survival","type":"publication"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"}]